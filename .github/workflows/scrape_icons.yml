name: Scrape Icons

on:
  workflow_dispatch:
    inputs:
      app_list:
        description: 'Comma-separated app names (leave empty for all)'
        required: false
        type: string

jobs:
  scrape-icons:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Upgrade pip
      run: python -m pip install --upgrade pip

    - name: Install dependencies
      run: |
        pip install pillow requests python-dotenv

    - name: Run icon scraper
      env:
        APP_LIST: ${{ inputs.app_list }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        if [ -n "$APP_LIST" ]; then
          python3 scripts/scrape_icons.py --apps "$APP_LIST"
        else
          python3 scripts/scrape_icons.py
        fi

    - name: Convert iOS-optimized PNGs
      run: |
        python3 -c 'import os; from PIL import Image; import io; def convert_ios_png(input_path): try: with open(input_path, "rb") as f: data = f.read(); if b"CgBI" not in data: return False; offset = 8; while offset < len(data): chunk_length = int.from_bytes(data[offset:offset+4], "big"); chunk_type = data[offset+4:offset+8]; if chunk_type == b"CgBI": new_data = data[:offset] + data[offset + chunk_length + 12:]; with open(input_path, "wb") as f: f.write(new_data); return True; offset += chunk_length + 12; if offset >= len(data): break; return False; except Exception as e: print(f"Error converting {input_path}: {e}"); return False; [convert_ios_png(os.path.join(root, "icon.png")) and print(f"Converted iOS-optimized PNG: {os.path.join(root, 'icon.png')}") for root, _, files in os.walk("Apps") if "icon.png" in files]'

    - name: Commit and push changes
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git add Apps/
        git commit -m "chore: Update icons for ${{ inputs.app_list || 'all apps' }}" || echo "No changes to commit"
        git push 